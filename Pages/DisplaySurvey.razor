@page "/displaysurvey"
@using BlazorSimpleSurvey.Data

<h3>Display Survey</h3>

<h4>Items: (@items.Count)</h4>

@foreach (var item in items)
{
    <div>
        <span><b>@item.ItemLabel</b></span>
        <br />
        @if (item.ItemType == "TextBox")
        {
            <RadzenTextBox @bind-Value="@item.ItemValue" MaxLength="4000" />
        }
        @if (item.ItemType == "TextArea")
        {
            <RadzenTextArea @bind-Value="@item.ItemValue" MaxLength="4000" />
        }
        @if (item.ItemType == "Date")
        {
            <RadzenDatePicker DateFormat="d" TValue="DateTime?" @bind-Value="@item.ItemDateValue" ShowTime="false" />
        }
        @if (item.ItemType == "DateTime")
        {
            <RadzenDatePicker TValue="DateTime?" @bind-Value="@item.ItemDateValue" ShowTime="true" />
        }
        @if (item.ItemType == "Dropdown")
        {
            <RadzenDropDown AllowClear="true" TValue="string"
                            Data="@item.SurveyItemOptions"
                            TextProperty="OptionLabel" ValueProperty="SurveyItemOptionId"
                            @bind-Value="@item.ItemValue" />
        }
    </div>
    <br />

}
@if (@items.Count > 0)
{
    <RadzenButton Click="SubmitForm" ButtonStyle="ButtonStyle.Primary" Text="Submit" />
}
<br />
<br />
<br />
<hr />
<h4>Add Form Item</h4>
<div>
    <span><b>Item Label</b></span>
    <br />
    <RadzenTextBox @bind-Value="@newItemLabel" />
</div>
<div>
    <span><b>Item Type</b></span>
    <br />
    <RadzenDropDown AllowClear="true" TValue="string"
                    Data="@FormTypes"
                    @bind-Value="newItemType" />
    @if (newItemType == "Dropdown")
    {
        <button type="button" class="btn btn-link" @onclick="OpenPopup">[Edit Options]</button>
    }
</div>
<br />
<RadzenButton Click="AddItem" ButtonStyle="ButtonStyle.Success" Text="Add Item" />

@if (ShowPopup)
{
    <div class="modal" tabindex="-1" style="display:block;background-color:gainsboro" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Edit Options</h3>
                    <!-- Button to close the popup -->
                    <button type="button" class="close"
                            @onclick="ClosePopup">
                        <span aria-hidden="true">X</span>
                    </button>
                </div>
                <!-- Edit form for the current Category -->
                <div class="modal-body">
                    <ul style="list-style-type:none;">
                        @foreach (var option in newOptions)
                        {
                        <li>
                            <input @bind="option.OptionLabel" />
                            <button type="button" class="btn btn-link"
                                    @onclick="(() => RemoveOption(option))">
                                [Delete]
                            </button>
                        </li>
                        }
                    </ul>

                    <input @bind="newOption" />
                    <button @onclick="AddOption">Add</button>
                </div>
            </div>
        </div>
    </div>
}
@code {
    private IList<SurveyItem> items = new List<SurveyItem>();
    private string newItemLabel;
    private string newItemType = "TextBox";
    private string newOption;
    List<SurveyItemOption> newOptions = new List<SurveyItemOption>();

    bool ShowPopup = false;

    IEnumerable<string> FormTypes =
        new string[] { "TextBox", "TextArea", "Date", "DateTime", "Dropdown" };

    private void AddItem()
    {
        if (!string.IsNullOrWhiteSpace(newItemLabel))
        {
            var NewFormItem =
                new SurveyItem
                {
                    ItemLabel = newItemLabel,
                    ItemType = newItemType,
                    SurveyItemOptions = newOptions,
                    Required = true
                };

            items.Add(NewFormItem);

            newItemLabel = string.Empty;
            newOptions = new List<SurveyItemOption>();
        }
    }

    private void SubmitForm()
    {
        foreach (var item in items)
        {
            var CurrentName = item.ItemLabel;
            var CurrentValue = item.ItemValue;
            var CurrentDateValue = item.ItemDateValue;
        }
    }

    void OpenPopup()
    {
        // Open Popup
        ShowPopup = true;
    }

    void ClosePopup()
    {
        // Close Popup
        ShowPopup = false;
    }

    private void AddOption()
    {
        if (!string.IsNullOrWhiteSpace(newOption))
        {
            Guid newGuid = Guid.NewGuid();

            newOptions.Add(new SurveyItemOption {  OptionLabel = newOption, SurveyItemOptionId = newGuid.ToString() });
            newOption = string.Empty;
        }
    }

    private void RemoveOption(SurveyItemOption paramSurveyItemOption)
    {
        // Remove the option from the collection
        newOptions.Remove(paramSurveyItemOption);
    }

}
