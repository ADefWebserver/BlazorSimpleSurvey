@using Models;
@using System.Linq;
@using BlazorSimpleSurvey.Data;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Radzen.DialogService dialogService
@inherits OwningComponentBase<SimpleSurveyService>
@strError
<RadzenCard Style="margin-bottom: 20px;">
    <div class="row">
        <div class="col-md-12">
            <div>Survey Name:</div>
            <RadzenTextBox @bind-Value="SelectedSurvey.SurveyName" Style="width: 400px" />
            <br />
        </div>
    </div>
</RadzenCard>
<RadzenButton Click="UpdateSurvey"
              Text="Save" ButtonStyle="ButtonStyle.Success"
              Style="margin-bottom: 10px; width: 150px" />
@code {
    [Parameter] public Survey SelectedSurvey { get; set; }

    string strError = "";
    System.Security.Claims.ClaimsPrincipal user;
    int UserId = 1;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

            user = authState.User;

            if (user.Identity.IsAuthenticated != false)
            {
                UserId = @Service.GetAllUsersAsync().Where(x => x.Objectidentifier == user.Identity.Name).FirstOrDefault().Id;
            }
        }
        catch (Exception ex)
        {
            strError = ex.GetBaseException().Message;
        }
    }

    async Task UpdateSurvey()
    {
        SelectedSurvey.UserId = UserId;

        try
        {
            SelectedSurvey = await @Service.CreateSurveyAsync(SelectedSurvey);
            dialogService.Close(SelectedSurvey);
        }
        catch (Exception ex)
        {
            strError = ex.GetBaseException().Message;
        }
    }
}
